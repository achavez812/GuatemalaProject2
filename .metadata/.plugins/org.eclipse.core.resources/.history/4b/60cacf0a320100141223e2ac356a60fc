package com.stanford.guatemedic;

import java.io.File;
import java.util.ArrayList;

import org.json.JSONException;
import org.json.JSONObject;

import android.content.Context;

public class UploadRecordsStore {
	
	private static UploadRecordsStore sUploadRecordsStore;
	
	private ArrayList<UploadFamily> families;
	private ArrayList<UploadFamilyVisit> family_visits;
	private ArrayList<UploadChild> children;
	private ArrayList<UploadChildVisit> child_visits;
	
	private Context context;
	
	private GuatemedicReader gmr;
	private GuatemedicWriter gmw;
	
	private UploadRecordsStore(Context c) {
		context = c;
		
		families= new ArrayList<UploadFamily>();
		family_visits = new ArrayList<UploadFamilyVisit>();
		children = new ArrayList<UploadChild>();
		child_visits = new ArrayList<UploadChildVisit>();
		gmr = new GuatemedicReader(context);
		gmw = new GuatemedicWriter(context);
		
		processChildVisits();
		processFamilyVisits();
		processChildren();
		processFamilies();
		
	}
	
	public static void load(Context c) {
		sUploadRecordsStore = new UploadRecordsStore(c);
	}
	
	public static UploadRecordsStore get(Context c) {
		if (sUploadRecordsStore == null)
			sUploadRecordsStore = new UploadRecordsStore(c);
		return sUploadRecordsStore;
	}
	
	
	private void processChildVisits() {
		for (File f : gmr.getNewChildVisitFiles()) {
			String data = gmr.getStringData(f);
			try {
				JSONObject obj = new JSONObject(data);
				String visit_id = obj.getString("visit_id");
				String child_id = obj.getString("child_id");
				String temp_child_id = obj.getString("temp_child_id");
				if (child_id.equals(temp_child_id)) { //HAS NOT BEEN UPLOADED YET
					obj.remove("visit_id");
					obj.remove("temp_child_id");
					UploadChildVisit ucv = new UploadChildVisit(visit_id, child_id,  );
				}
				
			} catch (JSONException e) {
				e.printStackTrace();
			}
		}
	}
	
	private void processFamilyVisits() {
		
	}
	
	private void processChildren() {
		
	}

	private void processFamilies() {
		
	}
}
