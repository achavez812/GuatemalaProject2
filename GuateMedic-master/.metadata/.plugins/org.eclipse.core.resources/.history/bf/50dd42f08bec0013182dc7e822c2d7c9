package com.example.guatemedic;

import java.util.ArrayList;

import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.ListFragment;
import android.util.Log;
import android.view.MenuInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.Toast;


public class SelectVillageListFragment extends ListFragment {
	
	private static final String TAG = "SelectVillageListFragment";
	
	private ArrayList<Village> mVillages;
	
	@Override
	public void onResume() {
		super.onResume();
		((VillageAdapter)getListAdapter()).notifyDataSetChanged();
		getActivity().setTitle(R.string.villages_title);
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		getActivity().setTitle(R.string.villages_title);
		
		mVillages = BasicRecordsStore.get(getActivity().getApplication()).getVillages();
		VillageAdapter adapter = new VillageAdapter(mVillages);
		setListAdapter(adapter);
	}
	
	
	
	@Override
	public void onListItemClick(ListView l, View v, int position, long id) {
		Village village = ((VillageAdapter)getListAdapter()).getItem(position);
		//Move to the families within that village
		SelectFamilyListFragment families = SelectFamilyListFragment.newInstance(village.getName());
		
		FragmentTransaction ft = getFragmentManager().beginTransaction();
		ft.replace(R.id.fragmentContainer, families);
		ft.addToBackStack(null);
		ft.commit();
	}
	
	private class VillageAdapter extends ArrayAdapter<Village>  {
		public VillageAdapter(ArrayList<Village> villages) {
			super(getActivity(), 0, villages);
		}
		
		@Override
		public View getView(final int position, View convertView, ViewGroup parent) {
			if (convertView == null) {
				convertView = getActivity().getLayoutInflater().inflate(R.layout.list_item_fragment, null);
			}
			
			Village village = getItem(position);
			String villageName = village.getName();
			//Assign values for view
			
			TextView villageTitle = (TextView)convertView.findViewById(R.id.list_item_title);
			villageTitle.setText(villageName);
			
			int numChildren = 0;
			int totalChildren = 0;
			int numFamilies = 0;
			for (BasicFamily aFamily : BasicRecordsStore.get(getActivity().getApplication()).getFamilies(villageName)) {
				if (aFamily.isCheckboxSelected()) {
					numFamilies++;
					String familyId = aFamily.getId();
					for (BasicChild aChild : BasicRecordsStore.get(getActivity().getApplication()).getChildren(familyId)) {
						if (aChild.isCheckboxSelected())
							numChildren++;
					}
				}
				totalChildren += aFamily.getChildren().size();
			}
			village.setCheckboxSelected(numFamilies != 0);
			
			TextView villageSubtitle = (TextView)convertView.findViewById(R.id.list_item_subtitle);
			String subtitleText = numChildren + "/" + totalChildren + " Children from " + numFamilies + " Families";
			villageSubtitle.setText(subtitleText);
			
			CheckBox checkbox = (CheckBox)convertView.findViewById(R.id.list_item_checkbox);
			checkbox.setChecked(village.isCheckboxSelected());
			checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
				public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
					View v = (View)buttonView.getParent();
					Village theVillage = mVillages.get(position);
					String villageName = theVillage.getName();
					theVillage.setCheckboxSelected(isChecked);
					
					int numChildren = 0;
					int numFamilies = 0;
					for (BasicFamily aFamily : BasicRecordsStore.get(getActivity().getApplication()).getFamilies(villageName)) {
						int c = aFamily.getChildren().size();
						if (c > 0) {
							aFamily.setCheckboxSelected(isChecked);
							numFamilies++;
							numChildren += c;
							String familyId = aFamily.getId();
							for (BasicChild aChild : BasicRecordsStore.get(getActivity().getApplication()).getChildren(familyId)) {
								aChild.setCheckboxSelected(isChecked);
							}
						}
					}
					
					if (isChecked) {
						String subtitleText = numChildren + "/" + numChildren + " Children from " + numFamilies + " Families";
						((TextView)v.findViewById(R.id.list_item_subtitle)).setText(subtitleText);
						
					} else {
						String subtitleText = 0 + "/" + numChildren + " Children from 0 Families";
						((TextView)v.findViewById(R.id.list_item_subtitle)).setText(subtitleText);
					}
				
					
				}
			});
			
			
			return convertView;
			
		}
	}

}


