package com.example.guatemedic;

import java.util.ArrayList;

import android.app.AlertDialog;
import android.content.DialogInterface;
import android.os.Bundle;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.ListFragment;
import android.util.Log;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.CompoundButton.OnCheckedChangeListener;

public class SelectFamilyListFragment extends ListFragment {
	
	
	public static final String EXTRA_VILLAGE_NAME = "com.example.guatemedic.village_name";
	
	private static final String TAG = "FamilyListFragment";
	
	private ArrayList<BasicFamily> mFamilies;
	
	@Override
	public void onResume() {
		super.onResume();
		((FamilyAdapter)getListAdapter()).notifyDataSetChanged();
		String villageName = getArguments().getString("villageName", null);
		getActivity().setTitle("Families in " + villageName);
	}
	
	public static SelectFamilyListFragment newInstance(String villageName) {
		SelectFamilyListFragment f = new SelectFamilyListFragment();
		
		Bundle args = new Bundle();
        args.putString("villageName", villageName);
        f.setArguments(args);
        
		return f;
		
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		//String village_name = (String)((getActivity()).getIntent().getSerializableExtra(FamilyListFragment.EXTRA_VILLAGE_NAME));
		//Log.i("TESTING", village_name);
		String villageName = getArguments().getString("villageName", null);
		getActivity().setTitle("Families in " + villageName);
		mFamilies = BasicRecordsStore.get(getActivity().getApplication()).getFamilies(villageName);
		FamilyAdapter adapter = new FamilyAdapter(mFamilies);
		setListAdapter(adapter);
	}
	
	@Override
	public void onListItemClick(ListView l, View v, int position, long id) {
		BasicFamily family = ((FamilyAdapter)getListAdapter()).getItem(position);
		if (family.getChildren().size() == 0) {
			new AlertDialog.Builder(getActivity())
		    .setTitle("Invalid entry")
		    .setMessage("This family has no children.")
		    .setCancelable(false)
		    .setNeutralButton("OK", new DialogInterface.OnClickListener() {
		        public void onClick(DialogInterface dialog, int which) { 
		        }
		     })
		    .setIcon(android.R.drawable.ic_dialog_alert)
		     .show();
		} else {
			//Move to the children within that family
			SelectChildListFragment children = SelectChildListFragment.newInstance(family.getId());
			FragmentTransaction ft = getFragmentManager().beginTransaction();
			ft.replace(R.id.fragmentContainer, children);
			ft.addToBackStack(null);
			ft.commit();	
		}
	}
	
	private class FamilyAdapter extends ArrayAdapter<BasicFamily>  {
		public FamilyAdapter(ArrayList<BasicFamily> families) {
			super(getActivity(), 0, families);
		}
		
		@Override
		public View getView(final int position, View convertView, ViewGroup parent) {
			if (convertView == null) {
				convertView = getActivity().getLayoutInflater().inflate(R.layout.list_item_fragment, null);
			}
			
			BasicFamily family = getItem(position);
			String familyId = family.getId();
			
			//Assign values for view
			TextView familyNameTextView = (TextView)convertView.findViewById(R.id.list_item_title);
			familyNameTextView.setText(family.getParent1_first_name() + " " + family.getParent1_middle_name() + " " + family.getParent1_last_name());
			
			CheckBox checkbox = (CheckBox)convertView.findViewById(R.id.list_item_checkbox);
			
			if (family.getChildren().size() == 0) {
				checkbox.setVisibility(View.INVISIBLE);
				TextView numChildrenTextView = (TextView)convertView.findViewById(R.id.list_item_subtitle);
				numChildrenTextView.setText("0/0 Children");
			} else {
				int count = 0;
				for (BasicChild aChild : BasicRecordsStore.get(getActivity().getApplication()).getChildren(familyId)) {
					if (aChild.isCheckboxSelected())
						count++;
				}
				family.setCheckboxSelected(count != 0);
				
				TextView numChildrenTextView = (TextView)convertView.findViewById(R.id.list_item_subtitle);
				numChildrenTextView.setText(count + "/" + family.getChildren().size() + " Children");
				
				
				checkbox.setChecked(family.isCheckboxSelected());
				checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
					public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
						View v = (View)buttonView.getParent();
						BasicFamily theFamily = mFamilies.get(position);
						theFamily.setCheckboxSelected(isChecked);
						int numTotalChildren = theFamily.getChildren().size();
						if (isChecked) {
							((TextView)v.findViewById(R.id.list_item_subtitle)).setText(numTotalChildren + "/" + numTotalChildren + " Children");
							String villageName = theFamily.getVillage();
							Village village = BasicRecordsStore.get(getActivity().getApplication()).getVillage(villageName);
							village.setCheckboxSelected(true);
						} else
							((TextView)v.findViewById(R.id.list_item_subtitle)).setText("0/" + numTotalChildren + " Children");
						
						
						int familyId = theFamily.getId();
						ArrayList<BasicChild> children = BasicRecordsStore.get(getActivity().getApplication()).getChildren(familyId);
						for (BasicChild theChild : children) {
							theChild.setCheckboxSelected(isChecked);
						}
					}
				});
			}
			return convertView;
		}
	}
}
